For drawing:

  // if(e.button == 2){ //right click
    //     clicked = false;
    //     var b = get(clickId);
    //     if(bndCanvas.indexOf(clickId) < 0){ //Add canvas element to a boundary
    //         b.innerHTML += "<canvas id='cnv"+clickId+"' class='can'></canvas>";
    //         var cnv = get('cnv'+clickId);
    //         cnv.width = e.target.width;
    //         cnv.hieght = e.target.height;
    //         b.style.borderRadius = '10px';
    //         bndCanvas.push(clickId);
    //     }
    //     else{ //boundary already has a canvas
    //         if(drawCanvas.indexOf(clickId)>-1){ //Canvas is in draw mode, turn off draw mode
    //             drawCanvas.pop();
    //             var bndCnvText = get('i'+clickId)
    //             bndCnvText.remove();
    //         }else{ //Canvas not in draw mode, turn on draw mode
    //             b.innerHTML+="<i id='i"+clickId+"'>Drawing</i>";
    //             drawCanvas.push(clickId);
    //         }
    //     }
    // }

//For drawing on boundaries
window.addEventListener('mousedown', (e)=> {
    (e.target.id!='') ? canvasDraw(e) : '';
});

if(drawing && drawCanvas.indexOf(e.target.parentElement.id) > -1){
        console.log("drawww");
        var canvas = get('cnv'+e.target.parentElement.id);
        var context = canvas.getContext('2d');
        context.rect(drawX,drawY,1,1);
        //DRAWING
        // context.beginPath();
        // context.strokeStyle = '#123456';
        // context.lineWidth = 1
        // context.lineJoin = "round";
        // context.moveTo(drawX, drawY);
        // context.lineTo(e.clientX, e.clientY);
        // context.closePath();
        context.stroke();
 
        drawX = e.clientX;
        drawY = e.clientY;
    }